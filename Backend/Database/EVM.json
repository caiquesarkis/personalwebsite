{"Title":"Ethereum vitual machine","Description":"Notas sobre a Máquina virtual do etherium","Tags":"EVM, Ethereum vitual machine","Body":"## Definition\r\nO [[EVM Ethereum vitual machine|EVM]] é uma [[Virtual machines|Virtual machine]], ou seja, ela traduz código escrito em linguagens de alto nível em bytes que o computador consegue interpretar. Essa máquina virtual é uma cpu simulada, que roda simultâneamente em diversas máquinas, em cima de uma implementação do protocolodo do [[Ethereum]] chamado `geth`. \r\n\r\n\r\n## Compilation Process\r\nInicialmente o código escrito em solidity é compilado por um compilador de solidity que então produz dois arquivos: Code.bin e Code.abi. O arquivo Code.bin é o programa que será distribuido pelas máquinas que compõem a blockchain e então será executado  pelo [[EVM Ethereum vitual machine|EVM].  O segundo arquivo, Code.abi, é uma interface que diz a programas externos como interagir com o código na blockchain.\r\n## Etherium transactions\r\n### Transaction Fields\r\n*Elementos de um bloco no blockchain*\r\n\r\nCampo|Descrição\r\n---|---\r\nNonce | O número da trasação para uma conta, este começa em zero.\r\nGas Price| O preço em Wei que essa transação vai pagar por unidade de gas\r\nGas Limit|O valor máximo de gás que essa transação pode utilizar\r\nTo |O endereço para o qual se está mandando a transação\r\n Value|A quantidade de Wei enviada\r\nData|Dados que serão transferidos para o endereço\r\nv, r, s |Components da assinatura da transação\r\n\r\n### Exemplos de transação\r\n- Transação de valor\r\n\t- Gas Limit: 21000 (valor mínimo de gás para realizar uma trasação)\r\n\t- To: O endereço que eu quero enviar o ether\r\n\t- Data: Vazio\r\n- Deploy de contrato(Contract Deployment)\r\n\t- To: Vazio\r\n\t- Data: O código `init` que irá configurar o estado do contrato e realizar o deploy\r\n- Chamado de função(Function Call)\r\n\t- Data: Dados de entrada que o código que está contido no blockchain irá utilizar e processar(função que será chamada e parâmetros)\r\n\r\n## Stack, Memory, Storage, Code, CallDAta, Logs\r\nO [[EVM Ethereum vitual machine|EVM]] é um processador baseado em [[Stack(pilha)|Stack]]. \r\nDentro do [[EVM Ethereum vitual machine|EVM]] podemos acessar e guardar a informação  em 6 lugares diferentes\r\n\r\n\r\n\r\n\r\n--- \r\n\r\n## Referências e recursos\r\n- [EVM: From Solidity to byte code, memory and storage](https://www.youtube.com/watch?v=RxL_1AfV7N4&ab_channel=EthereumEngineeringGroup)\r\n- [What is Ethereum Virtual Machine (EVM)? Programmer explains](https://www.youtube.com/watch?v=GPoze5RmDVU&ab_channel=IvanonTech)"}