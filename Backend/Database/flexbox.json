{"Title":"Como utilizar o flexbox","Description":"Aprenda a posicionar elementos utilizando o flexbox","Tags":"CSS, HTML, Programming","Body":"# CSS\r\n## Flex-Box\r\n\r\nO sistema de coordenadas é cartesiano, no entanto, o Y é invertido, assim como o sistema de coordenadas do canvas. \r\n\r\n### Display\r\n``` CSS\r\ndiv{\r\n\tdisplay: flex\r\n}\r\n```\r\nA propriedade `display` alinha todos os elementos ao longo do eixo principal (X) da esquerda para a direita. \r\n\r\n### Flex Wrap\r\n``` CSS\r\ndiv{\r\n\tdisplay: flex\r\n\t\r\n\tflex-wrap: wrap;\r\n}\r\n```\r\n\r\nQuando definimos apenas o elemento com a propriedade `flex` por padrão quando os elementos começarem a ultrapassar a largura da tela eles serão expremidos. Para solucionar isso utilizamos o comando `flex-wrap`, este define que ao chegar no limite os elementes deverão quebrar a linha.\r\n\r\n### Flex Direction\r\n\r\n``` CSS\r\ndiv{\r\n\tdisplay: flex\r\n\t\r\n\tflex-wrap: wrap;\r\n\t\r\n\tflex-direction: row-reverse; \r\n}\r\n```\r\n\r\nA propriedade  `flex-direction` indica qual a direção do eixo principal. Por padrão temos o valor de `row` , que define a direção do eixo da esquerda para a direita. No entanto, se colocarmos `row-reverse` iremos inverter o sentido do eixo. \r\n\r\nSe quisermos que o eixo principal seja o Y teremos que declarar `flex-direction` como `column` . De forma análoga, podemos ter o `column-reverse` invertendo o novo eixo principal.\r\n\r\n### Align Items\r\n``` CSS\r\ndiv{\r\n\tdisplay: flex\r\n\t\r\n\tflex-wrap: wrap;\r\n\t\r\n\tflex-direction: row; \r\n\t\r\n\talign-items: baseline;\r\n\t\r\n}\r\n```\r\n\r\nA propriedade  `align-items` diz respeito ao alinhamento dos objetos ao longo do eixo cruzado (secundário), e tem como valor padrão `baseline`.  Se quisermos centralizar os elementos basta modificar o valor para `center`.\r\n\r\n### Justify Content\r\n\r\n``` CSS\r\ndiv{\r\n\tdisplay: flex\r\n\t\r\n\tflex-wrap: wrap;\r\n\t\r\n\tflex-direction: row; \r\n\t\r\n\tjustify-content: space-between;\r\n\t\r\n}\r\n```\r\n\r\nA propriedade  `justify-content` alinha os itens ao longo do eixo principal. Uma possibilidade de valor para essa propriedade é o `space-between` que da um espaçamento equidistante entre os elementos filhos. Outra possibilidade seria o `space-around` define um espaçamento entre os elementos em si e entre os elementos e a borda, cada elemento terá um valor à esquerdar e à direita iguais.\r\n\r\n### Flex Basis\r\n``` CSS\r\n.pai{\r\n\tdisplay: flex;\r\n\twidth: 500;\r\n}\r\n\r\n.child_1{\r\n\tflex-basis: 100px;\r\n}\r\n\r\nchild_2{\r\n\tflex-basis: 200px;\r\n}\r\n```\r\n\r\nA propriedade  `flex-basis` define o tamanho inicial do elemento filho. No exemplo acima, temos que o elemento pai tem 500px de largura, o filho 1 tem 100px e o filho 2 200px. Isso significa que os elementos não ocuparão totalmente o espaço alocado pelo pai. No entanto, se quisermos que os elementos ocupem todo o espaço podemos utilizar o comando `flex-grow`, que irá acrescer os elementos de forma proporcional.\r\n\r\n### Flex Grow\r\n``` CSS\r\n.child_1{\r\n\tflex-basis: 100px;\r\n\tflex-grow: 2;\r\n}\r\n\r\nchild_2{\r\n\tflex-basis: 200px;\r\n\tflex-grow: 1;\r\n}\r\n```\r\n\r\nOs pesos associados a propriedade `flex-grow` dizem em termos de proporção relativa quanto os elementos irão preencher. Neste caso o filho 1 irá crescer  $\\frac{2}{3}$ do  espaço sobrando do elemento pai e o filho 2 $\\frac{1}{3}$.\r\n\r\n### Flex Shrink\r\n``` CSS\r\n.pai{\r\n\tdisplay: flex;\r\n\twidth: 500;\r\n}\r\n\r\n.child_1{\r\n\tflex-basis: 300px;\r\n\tflex-shrink: 2;\r\n}\r\n\r\nchild_2{\r\n\tflex-basis: 300px;\r\n\tflex-shrink: 1;\r\n}\r\n```\r\n\r\nCaso os elementos ultrapassem o limite imposto pelo elemento pai temos que definir um fator de encolhimento definida pela propriedade `flex-shrink`. Quanto maior esse valor menor será o tamanho final do elemento.\r\n\r\n\r\n## Media Queries\r\n### \r\n\r\n```CSS\r\n@media (max-width:600px){\r\n\t.my-div{\r\n\t\tbackground-color:red;\r\n\t}\r\n}\r\n```\r\nAqui temos uma media querie que ajuda na responsividade do site. Neste caso a propriedade `max-width`  dentre do querie diz que quando a largura maxima for 600px os elementos declarados dentro devem assumir novos valores, neste caso estamos modificando os valores da classe `my-div`.\r\n\r\n\r\nTambém é possível juntar condições utilizando a palavra `and`.\r\n```CSS\r\n@media (max-width:600px) and (min-with:500px){\r\n\t.my-div{\r\n\t\tbackground-color:red;\r\n\t}\r\n}\r\n```\r\nNeste caso a cor vermelha so será utlizada quando o tamnho da tela estiver entre esses dois valores."}